print '/* Generated by kpgdir.pl - do not edit */
#include <stdint.h>

#include "memlayout.h"
#include "mmu.h"

__attribute__((__aligned__(PGSIZE)))
uint64_t kpte[512] = {
';

for (my $i = 0; $i < 512; $i ++) {
    my $pa = $i * 2*1024*1024;
    printf("    0x%x | ", $pa);
    if ($pa < 0x3F000000) {
        printf("PTE_NORMAL | PTE_KERN", $pa);
    }
    else {
        printf("PTE_DEVICE | PTE_KERN", $pa);
    }
    if ($i != 511) {
        printf(",\n");
    }
}

print '
};

__attribute__((__aligned__(PGSIZE)))
uint64_t kpud[512] = {
    V2P(kpte) + PTE_TABLE,
    0x40000000 + PTE_DEVICE + PTE_KERN,
};

__attribute__((__aligned__(PGSIZE)))
uint64_t kpgdir[512] = { V2P(kpud) + PTE_TABLE };
'
